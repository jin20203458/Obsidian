{
  "main": {
    "id": "cbb3dac016d2c1ae",
    "type": "split",
    "children": [
      {
        "id": "dd7e55fc608692e4",
        "type": "tabs",
        "children": [
          {
            "id": "e53eb00aa2a6412b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLVM/Clang 환경설정/Clang_Build.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "Clang_Build"
            }
          },
          {
            "id": "a4bae61c1f0ad5f0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLVM/Clang 환경설정/Clang_Build.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "Clang_Build"
            }
          },
          {
            "id": "27dbd1ed8386469e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/VirtualCallChecker.cpp.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "VirtualCallChecker.cpp"
            }
          },
          {
            "id": "5ad54dd09847948a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLVM/Clang 환경설정/Clang_Html_TEST.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "Clang_Html_TEST"
            }
          },
          {
            "id": "ef1d3a9f273d737f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLVM/Clang 환경설정/Clang_Html_TEST.md",
                "mode": "source",
                "source": false
              },
              "icon": "lucide-file",
              "title": "Clang_Html_TEST"
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "4b977cd9f82bf089",
    "type": "split",
    "children": [
      {
        "id": "d038b5ea78fa21f2",
        "type": "tabs",
        "children": [
          {
            "id": "c37e718aa4ee83bc",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical",
                "autoReveal": false
              },
              "icon": "lucide-folder-closed",
              "title": "파일 탐색기"
            }
          },
          {
            "id": "d7c4bf8f554b8b1d",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "검색"
            }
          },
          {
            "id": "c82a7ae94d0d11f4",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "북마크"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "6e350fc4ceef89b0",
    "type": "split",
    "children": [
      {
        "id": "43ac2a7de2897c26",
        "type": "tabs",
        "children": [
          {
            "id": "96c33d0c1ad3d0d6",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/MallocChecker.cpp.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "MallocChecker.cpp 의 백링크"
            }
          },
          {
            "id": "224d726b48934052",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/MallocChecker.cpp.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "MallocChecker.cpp 의 나가는 링크"
            }
          },
          {
            "id": "c1e8fcddca7fab33",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-tags",
              "title": "태그"
            }
          },
          {
            "id": "1ce80521e9463630",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/MallocChecker.cpp.md",
                "followCursor": false,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-list",
              "title": "MallocChecker.cpp 의 개요"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:빠른 전환기 열기": false,
      "graph:그래프 뷰 열기": false,
      "canvas:새 캔버스 만들기": false,
      "daily-notes:오늘의 일일 노트 열기": false,
      "templates:템플릿 삽입": false,
      "command-palette:명령어 팔레트 열기": false,
      "obsidian-git:Open Git source control": false,
      "vscode-editor:Create Code File": false,
      "obsidian-excalidraw-plugin:New drawing": false
    }
  },
  "floating": {
    "id": "d05ba95e4c338b60",
    "type": "floating",
    "children": [
      {
        "id": "e45f915c509421e3",
        "type": "window",
        "children": [
          {
            "id": "e7a96f5a363ae68d",
            "type": "tabs",
            "dimension": 31.300813008130078,
            "children": [
              {
                "id": "8aabe14f2829d1f7",
                "type": "leaf",
                "state": {
                  "type": "markdown",
                  "state": {
                    "file": "무기체계 소프트웨어 코딩 규칙/3. C++ 전용 규칙/1. C++ 전용 규칙.md",
                    "mode": "source",
                    "source": false
                  },
                  "icon": "lucide-file",
                  "title": "1. C++ 전용 규칙"
                }
              }
            ]
          },
          {
            "id": "a86a72167639937d",
            "type": "tabs",
            "dimension": 32.65582655826558,
            "children": [
              {
                "id": "67c9745b8c841609",
                "type": "leaf",
                "state": {
                  "type": "markdown",
                  "state": {
                    "file": "무기체계 소프트웨어 코딩 규칙/2. C 전용 규칙/C 전용 규칙.md",
                    "mode": "source",
                    "source": false
                  },
                  "icon": "lucide-file",
                  "title": "C 전용 규칙"
                }
              }
            ]
          },
          {
            "id": "9f853671e650f3ac",
            "type": "tabs",
            "dimension": 36.043360433604335,
            "children": [
              {
                "id": "3bf36123c4c0497c",
                "type": "leaf",
                "state": {
                  "type": "markdown",
                  "state": {
                    "file": "Programing/기타/AI 탬플릿.md",
                    "mode": "source",
                    "source": false
                  },
                  "icon": "lucide-file",
                  "title": "AI 탬플릿"
                }
              }
            ]
          }
        ],
        "direction": "vertical",
        "x": 3669,
        "y": 22,
        "width": 1451,
        "height": 842,
        "maximize": false,
        "zoom": 0
      }
    ]
  },
  "active": "8aabe14f2829d1f7",
  "lastOpenFiles": [
    "LLVM/Clang 환경설정/Clang_Html_TEST.md",
    "LLVM/Clang 환경설정/Clang-tidy.md",
    "LLVM/Clang 환경설정/Clang_Build.md",
    "무기체계 소프트웨어 코딩 규칙/3. C++ 전용 규칙/1. C++ 전용 규칙.md",
    "무기체계 소프트웨어 코딩 규칙/1. C,C++ 공통적용/1. 스타일.md",
    "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/AnalyzerStatsChecker.cpp.md",
    "LLVM/Clang 환경설정/Clang_Static_Analyzer.md",
    "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.h/taggedUnionMdoeling.h.md",
    "LLVM/How to Write a Checker in 24 Hours/0. overview.md",
    "LLVM/How to Write a Checker in 24 Hours/3. Builds a Graph of Reachable Program States.md",
    "LLVM/How to Write a Checker in 24 Hours/2. Symbolic Execution.md",
    "LLVM/How to Write a Checker in 24 Hours/1. Why Static Analysis.md",
    "LLVM/CSA 흐름구조 예시/Clang Static Analyzer 전체 분석 순서.md",
    "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/CallAndMessageChecker.cpp.md",
    "기타_자료/Pasted image 20250114184350.png",
    "기타_자료/Pasted image 20240623232757.png",
    "기타_자료/Pasted image 20240606211252.png",
    "기타_자료/Pasted image 20240604215525.png",
    "무기체계 소프트웨어 코딩 규칙/3. C++ 전용 규칙/2. C++ 전용 규칙.md",
    "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/UndefinedNewArraySizeChecker.cpp.md",
    "LLVM/CSA 흐름구조 예시/CSA 논리적인 흐름 구조.md",
    "LLVM/CSA 흐름구조 예시/CSA 논리적인 흐름 구조(ExplodedGraph).md",
    "Programing/기타/AI 탬플릿.md",
    "LLVM/CSA_Souce/CSA_Checkers/CSA_Checkers.cpp/VirtualCallChecker.cpp.md",
    "무기체계 소프트웨어 코딩 규칙/2. C 전용 규칙/C 전용 규칙.md",
    "무기체계 소프트웨어 코딩 규칙/1. C,C++ 공통적용/7. 연산자 규칙.md",
    "무기체계 소프트웨어 코딩 규칙/1. C,C++ 공통적용/6. 포인터, 배열 규칙.md",
    "무기체계 소프트웨어 코딩 규칙/1. C,C++ 공통적용/5. 변환 규칙.md",
    "무기체계 소프트웨어 코딩 규칙/1. C,C++ 공통적용/3. 식별자 규칙.md",
    "무기체계 소프트웨어 코딩 규칙/1. C,C++ 공통적용/4. 조건식 규칙.md"
  ]
}